corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
corr(spd, 1000)
source('D:/Rcommon/RwdCoursera/corr.R')
?cor
source('D:/Rcommon/RwdCoursera/corr.R')
test<- corr(spd, 1000)
test
cor(x[,23])
cor(x[,2 3])
x[,2]
x[, meanS]
x[, "meanS"]
x$meanS
x
test$meanS
cor(test[,23])
cor(test[,2 3])
test[, 2]
test[, 2 3]
test[, c(2, 3)]
cor(test[, c(2, 3)])
test<- corr(spd, 800)
test
cor(test[, c("meanS", "meanN")])
cor(test[, c("meanS", "meanN")], method = "kendall", use = "complete")
cor(test[, c("meanS", "meanN")], method = "kendall", use = "pairwise")
cr<- cor(test[, c("meanS", "meanN")], method = "kendall", use = "pairwise")
summary(cr)
cr<- cor(test[, c("meanS", "meanN")], method = "kendall", use = "complete")
summary(cr)
head(cr)
cr<- cor(test[, c("meanS", "meanN")])
head(cr)
summary(cr)
test<- corr(spd, 150)
source('D:/Rcommon/RwdCoursera/corr.R')
test<- corr(spd, 150)
test
corr(test)
head(test)
test<- corr(spd, 150)
test
head(test)
cor(test)
testc <- cor(test)
head(testc)
testc <- c(cor(test))
testc
head(testc)
summary(testc)
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
test<- corr(spd, 150)
head(test)
summary(test)
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
test<- corr(spd, 150)
source('D:/Rcommon/RwdCoursera/corr.R')
test<- corr(spd, 150)
source('D:/Rcommon/RwdCoursera/corr.R')
test<- corr(spd, 150)
okfilescor
source('D:/Rcommon/RwdCoursera/corr.R')
test<- corr(spd, 150)
test
?complete.cases
complete.cases(test)
testcomp <- test[complete.cases(test)]
testcomp <- subset(test, !is.na(test$nitrate) & !is.na(test$sulfate))
head(testcomp)
cor(testcomp$nitrate , testcomp$sulfate)
testcomp <- subset(test, !is.na(test$nitrate) & !is.na(test$sulfate) & test$ID == 2)
cor(testcomp$nitrate , testcomp$sulfate)
source('D:/Rcommon/RwdCoursera/corr.R')
test<- corr(spd, 150)
test
source('D:/Rcommon/RwdCoursera/corr.R')
testun <- unique(test)
testun
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/pollutantmean.R')
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
test<- corr(spd, 150)
source('D:/Rcommon/RwdCoursera/corr.R')
test<- corr(spd, 150)
source('D:/Rcommon/RwdCoursera/corr.R')
test<- corr(spd, 150)
TEST
test
head(test)
summary(test)
test<- corr(spd, 400)
head(test)
summary(test)
test<- corr(spd, 5000)
test
source('D:/Rcommon/RwdCoursera/corr.R')
test<- corr(spd, 5000)
test
summary(test)
length(test)
source('D:/Rcommon/RwdCoursera/corr.R')
test<- corr(spd, 5000)
length(test)
summary(test)
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
test<- corr(spd, 5000)
summary(test)
length(test)
test <- vector('character')
test
test <- c(2, 3)
test
class(test)
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corrv.01.R')
source('D:/Rcommon/RwdCoursera/corr.R')
source('D:/Rcommon/RwdCoursera/corr.R')
source("submitscript1.R")
source('D:/Rcommon/RwdCoursera/pollutantmean.R')
source('D:/Rcommon/RwdCoursera/complete.R')
source('D:/Rcommon/RwdCoursera/corr.R')
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
cube <- function(x, n) {
x^3
}
cube(3)
parent.frame
sys.parent
mkdir ../data
mkdir data
pwd ../data
mkdir /Users/data
?mkdir
package.install("KernSmooth")
package install("KernSmooth")
install.package("KernSmooth")
install
package
?install
?package
??package
library("acepack", lib.loc="C:/Program Files/R/R-3.1.2/library")
detach("package:acepack", unload=TRUE)
install.packages(c("digest", "doBy", "effects"))
install.packages(c("digest", "doBy", "effects"))
install.packages(c("digest", "doBy", "effects"))
install.packages(c("digest", "doBy", "effects"))
install.packages(c("digest", "doBy", "effects"))
install.packages(c("digest", "doBy", "effects"))
install.packages("KernSmooth")
library(KernSmooth)
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5!=7
5!=7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, !FALSE)
inst <- sample(10)
ints <- sample(10)
ints
ints > 5
which(ints>5)
which(ints>7)
any(ints<0)
all(ints>0)
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo(flags)
class(flags)
cls_lst <- lapply(flags,class)
cls_lst <- lapply(flags, class)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(cls_list, as.character)
cls_vect <- sapply(flags, class)
class(sls_vect)
class(cls_vect)
sum(flags$orange)
flag_colars <- flags[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply (flag_colors, sum)
sapply (flag_colors, sum)
sapply (flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,6,6))
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(c(3,4,5,5,5,6,6), unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
install.packages("swirl")
install.packages("swirl")
swirl
swirl()
library(swirl)
swirl()
viewinfo(flags)
viewinfo()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply*flags$animate, flags$landmass, mean)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants, 15)
summary(plants)
table(plats$Active_Growth_Period)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replacement = TRUE, prob c(0.3, 0.7))
flips <- sample(c(0,1), 100, replacement = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
str(flips)
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
sum(flips)
?rnorm
rnorm(10)
rnorm(10, mean=100, sd=25)
rpois(5, mean=10)
?rpois
rpois(5, lambda=10)
my_pois <- replicate(100, rpois(5, lambda=10))
my_pois <- replicate(100, rpois(5, 10))
str(my_pois)
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unlcass(d2)
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t2 <- "October 17, 1986 08:24"
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
TRUE == TRUE
FALSE == TRUE) == FALSE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 1-
1
10 <= 10
5 != 7
5 == !7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8
|| 6 != 8 && 4 > 3.9
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', )
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(list, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_list, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lappy(flag_shape, range)
lapply(flag_shape, range)
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
source('D:/Rcommon/RwdCoursera/complete2.R')
complete("specdata", 15)
source('D:/Rcommon/RwdCoursera/complete2.R')
complete("specdata", 15)
traceback
traceback(complete("specdata", 5))
complete("specdata", 15)
source('D:/Rcommon/RwdCoursera/complete2.R')
complete("specdata", 15)
source('D:/Rcommon/RwdCoursera/complete2.R')
debug(complete("specdata", 15))
debug
complete("specdata", 15)
source('D:/Rcommon/RwdCoursera/complete2.R')
library(swirl)
swirl)
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z *2 +100
sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z *2 +1000
my_div
1:20
pi:10
15:1
?`:`
seq(1 , 10)
seq(1 , 20)
seq(1 , 20, by = 0.5)
seq(1 , 10, by = 0.5)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
lengt(my_seq)
length(my_seq)
1:length(my_seq)
seq(alongh.with = my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_char <- c(my_char, "Remco")
my_name <- c(my_char, "Remco")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("x", "y", "z"), sep = "")
paste(1:3, c("x", "y", "z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep="-")
getwd()
setwd("D:/Rcommon/")
setwd("D:/Rcommon/RGitRep/ProgrammingAssignment2")
getwd
getwd)
getwd()
source('D:/Rcommon/RGitRep/ProgrammingAssignment2/cachematrix.R')
source('D:/Rcommon/RGitRep/ProgrammingAssignment2/cachematrix.R')
source('D:/Rcommon/RGitRep/ProgrammingAssignment2/cachematrix.R')
source('D:/Rcommon/RGitRep/ProgrammingAssignment2/cachematrix.R')
